buildscript {
    repositories {
        maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
        classpath group: "org.spongepowered", name: "mixingradle", version: "0.7-SNAPSHOT"
    }
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "idea"
apply plugin: "maven-publish"
apply plugin: "org.spongepowered.mixin"

version = minecraft_version + mod_version
group = mod_group

base {
    archivesName = mod_name
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {

    mappings channel: mapping_channel, version: mapping_version
    accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")

    runs {

        configureEach {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            arg "-mixin.config=" + project.mod_id + ".mixins.json"

        }

        server {
            args '--nogui'
            arg "-mixin.config=" + project.mod_id + ".mixins.json"
        }


        data {
            workingDirectory project.file('run-data')
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}


sourceSets.main.resources { srcDir 'src/generated/resources' }

mixin {
    add sourceSets.main, "${project.mod_id}.refmap.json"
}

repositories {
}

dependencies {
    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, 
            minecraft_version_range: minecraft_version_range,
            
            forge_version: forge_version, 
            forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
           
            mod_id: mod_id, mod_name: 
            mod_name, mod_license:
            mod_license, mod_version: mod_version,
            mod_authors: mod_author, 
            mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_author,
                'Specification-Version'   : '1',
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_author,
                "MixinConfigs"            : project.mod_id + ".mixins.json",
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}


publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
